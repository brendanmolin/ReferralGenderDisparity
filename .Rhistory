train_hist %>%
group_by(contextid) %>%
summarise(Collections.Variation = sum(Collections.Amount)) %>%
summarise(Collections.Variation = var(Collections.Variation)) %>%
ggplot(aes(Collections.Variation)) + geom_histogram()
### Variation in collections within contexts over time
train_hist %>%
group_by(contextid) %>%
summarise(Collections.Sum2 = sum(Collections.Amount)) %>%
summarise(Collections.Variation = var(Collections.Sum2)) %>%
ggplot(aes(Collections.Variation)) + geom_histogram()
train_hist %>%
group_by(contextid) %>%
summarise(Collections.Sum2 = sum(Collections.Amount)) %>%
summarise(Collections.Variation = var(Collections.Sum2))
train_hist %>%
group_by(contextid) %>%
summarise(Collections.Sum2 = sum(Collections.Amount)) %>%
group_by(contextid) %>%
summarise(Collections.Variation = var(Collections.Sum2)) %>%
ggplot(aes(Collections.Variation)) + geom_histogram()
train_hist %>%
group_by(contextid) %>%
summarise(Collections.Sum2 = sum(Collections.Amount)) %>%
group_by(contextid) %>%
summarise(Collections.Variation = var(Collections.Sum2))
train_hist %>%
group_by(contextid) %>%
summarise(Collections.Sum2 = sum(Collections.Amount)) %>%
ggplot(aes(Collections.Variation)) + geom_histogram()
train_hist %>%
group_by(contextid) %>%
summarise(Collections.Variation = sum(Collections.Amount)) %>%
ggplot(aes(Collections.Variation)) + geom_histogram()
train_hist %>%
group_by(contextid) %>%
summarise(Collections.Variation = sum(Collections.Amount))
View(train_hist)
train_hist %>%
group_by(Year, contextid) %>%
summarise()
cor(collections_2016[,5:8])
View(train_hist)
View(train_hist)
### Aggregate by year 2016
collections_2016 <-
collections_supp %>%
mutate(Year = year(date_id)) %>%
filter(Year == 2016) %>%
group_by(Year, contextid, SEGMENT, PROVIDERxSPECIALTY) %>%
summarise(Collector = mean(Collector),
Collections.Amount = mean(Collections.Amount),
Clinical.Encounters = mean(Clinical.Encounters),
Total.Claims.Billed = mean(Total.Claims.Billed)) %>%
filter(Collections.Amount > 0)
### Split Contexts into Train and Test sets
set.seed(randomseed)
train_rows <- caret::createDataPartition(collections_2016$Collections.Amount, p=.75, list=FALSE)
train_data <- collections_2016[train_rows,]
test_data <- collections_2016[-train_rows,]
### Grab historical data for all train data
train_hist <-
collections %>%
filter(contextid %in% train_data$contextid)
## Exploratory Analysis
### Summarize Data
summary(train_data)
summary(train_hist)
View(train_hist)
### Show the range of collections
ggplot(aes(Collections.Amount), data=train_data) + geom_histogram()
### Variation in collections within contexts over time
train_hist %>%
group_by(contextid) %>%
summarise(Collections.Variation = sum(Collections.Amount)) %>%
summarise(Collections.Variation = var(Collections.Variation)) %>%
ggplot(aes(Collections.Variation)) + geom_histogram()
### Variation in collections within contexts over time
train_hist %>%
group_by(contextid) %>%
summarise(Collections.Variation = var(Collections.Variation)) %>%
ggplot(aes(Collections.Variation)) + geom_histogram()
### Variation in collections within contexts over time
train_hist %>%
group_by(contextid) %>%
summarise(Collections.Variation = var(Collections.Amount)) %>%
ggplot(aes(Collections.Variation)) + geom_histogram()
### Grab historical data for all train data
train_hist <-
collections_supp %>%
filter(contextid %in% train_data$contextid)
View(train_hist)
train_hist %>%
group_by(Year, contextid) %>%
summarise(Collections.Amount = sum(Collections.Amount)
)
train_hist %>%
group_by(MONTH, contextid) %>%
summarise(Collections.Amount = sum(Collections.Amount)
)
train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Collector = sum(Collector))
train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Collector = sum(Collector)) %>%
cor())
train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Collector = sum(Collector)) %>%
cor(select(Clinical.Encounters, Collections.Amount)))
train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Collector = sum(Collector)) %>%
cor(select(Clinical.Encounters,))
train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Collector = sum(Collector)) %>%
cor(select(Clinical.Encounters, Collections.Amount))
cor(train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Collector = sum(Collector)))
cor(train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Collector = sum(Collector)) %>%
select(Total.Claims.Billed, Clinical.Encounters, Collections.Amount, Invoice.Revenue, Cost.per.Claim, Collector.Cost, Collector))
cor(train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Total.Claims.Billed = mean(Total.Claims.Billed)
Collector = sum(Collector)) %>%
select(Total.Claims.Billed, Clinical.Encounters, Collections.Amount, Invoice.Revenue, Cost.per.Claim, Collector.Cost, Collector))
cor(train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Total.Claims.Billed = mean(Total.Claims.Billed),
Collector = sum(Collector)) %>%
select(Total.Claims.Billed, Clinical.Encounters, Collections.Amount, Invoice.Revenue, Cost.per.Claim, Collector.Cost, Collector))
train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Total.Claims.Billed = mean(Total.Claims.Billed),
Collector = sum(Collector))
train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Total.Claims.Billed = mean(Total.Claims.Billed),
Collector = sum(Collector)) %>%
select(Total.Claims.Billed, Clinical.Encounters, Collections.Amount, Invoice.Revenue, Cost.per.Claim, Collector.Cost, Collector)
a <-
train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Total.Claims.Billed = mean(Total.Claims.Billed),
Collector = sum(Collector)) %>%
select(Total.Claims.Billed, Clinical.Encounters, Collections.Amount, Invoice.Revenue, Cost.per.Claim, Collector.Cost, Collector)
cor(a[,-1])
c <- cor(a[,-1])
c
corrplot::corrplot(c)
lm(Collections.Amount ~ Collector)
lm(Collections.Amount ~ Collector, data = a)
ggplot(data = a, aes(x = Collector, y = Collections.Amount)) + geom_point() + geom_smooth()
ggplot(data = a, aes(x = Collector, y = Collections.Amount)) + geom_point() + geom_smooth(method = 'glm')
ggplot(data = a, aes(x = Collector, y = Collections.Amount)) + facet_grid(date_id) + geom_point() + geom_smooth(method = 'glm')
lm(Collections.Amount ~ Collector, data = a)
ggplot(data = a, aes(x = Collector, y = Collections.Amount)) + facet_grid(~date_id) + geom_point() + geom_smooth(method = 'glm')
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) + facet_grid(~date_id) + geom_point() + geom_smooth(method = 'glm')
lm(Collections.Amount ~ Collector + date_id, data = a)
glm(Collections.Amount ~ Collector + date_id, data = a)
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) + geom_point() + geom_smooth(method = 'glm') +
xlim(0, 2) + stat_binhex(na.rm = TRUE) + theme(aspect.ratio = 1) + facet_grid(~date_id)
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) + facet_grid(~date_id, ncol = 4) + geom_point() + geom_smooth(method = 'glm')
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) + facet_wrap(~ date_id, ncol = 4) + geom_point() + geom_smooth(method = 'glm')
glm(Collections.Amount ~ Collector + date_id + Collector*date_id, data = a)
glm(Collections.Amount ~ Collector + date_id, data = a) + abline(1)
glm(Collections.Amount ~ Collector + date_id, data = a) + abline(min(Collections.Amount):max(Collections.Amount)
)
min(Collections.Amount):max(Collections.Amount)
glm(Collections.Amount ~ Collector + date_id, data = a) + abline(min(Collections.Amount):max(Collections.Amount), data = a)
glm(Collections.Amount ~ Collector + date_id, data = a) + abline(min(a$Collections.Amount):max(a$Collections.Amount))
glm(Collections.Amount ~ Collector + date_id, data = a) + abline(min(a$Collections.Amount), max(a$Collections.Amount))
max(a$Collections.Amount)
a$Collections.Amount
(a$Collections.Amount)
max(a$Collections.Amount)
min(a$Collections.Amount)
glm(Collections.Amount ~ Collector + date_id, data = a) + geom_abline(slope = 1)
glm(Collections.Amount ~ Collector + date_id, data = a) + geom_abline(intercept = 0, slope = 1)
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) + facet_wrap(~date_id, ncol = 4) + geom_point() + geom_smooth(method = 'glm') + geom_abline(intercept = 0, slope = 1)
glm(Collections.Amount ~ Collector + date_id, data = a)
glm(Collections.Amount ~ Collector, data = a)
glm(Collections.Amount ~ Collector + I(Collector^2), data = a)
fit0 <- glm(Collections.Amount ~ Collector, data = a)
fit1 <- glm(Collections.Amount ~ Collector + I(Collector^2), data = a)
summary(fit0)
summary(fit1)
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) +
facet_wrap(~date_id, ncol = 4) +
geom_point() +
geom_smooth(method = 'glm', formula = poly(x, 2))
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) +
facet_wrap(~date_id, ncol = 4) +
geom_point() +
geom_smooth(method = 'glm', formula = y~poly(x, 2))
summary(fit0)
summary(fit1)
anova(fit0, fit1)
fit0 <- lm(Collections.Amount ~ Collector, data = a)
fit1 <- lm(Collections.Amount ~ Collector + I(Collector^2), data = a)
summary(fit0)
summary(fit1)
anova(fit0, fit1)
View(a)
a <-
train_hist %>%
group_by(date_id, contextid) %>%
summarise(Clinical.Encounters = mean(Clinical.Encounters),
Collections.Amount = mean(Collections.Amount),
Invoice.Revenue = mean(Invoice.Revenue),
Cost.per.Claim = mean(Cost.per.Claim),
Collector.Cost = mean(Collector.Cost),
Total.Claims.Billed = mean(Total.Claims.Billed),
Collector = sum(Collector))
c <- cor(a[,-2])
c
corrplot::corrplot(c)
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) +
facet_wrap(~date_id, ncol = 4) +
geom_point() +
geom_smooth(method = 'glm', formula = y~poly(x, 2))
fit2 <- lm(Collections.Amount ~ Collector + contextid, data = a)
fit3 <- lm(Collections.Amount ~ Collector + contextid + contextid * Collector, data = a)
View(a)
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) +
facet_wrap(~context_id, ncol = 4) +
geom_point() +
geom_smooth(method = 'glm', formula = y~poly(x, 2))
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount))
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount))
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) +
geom_point()
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) +
geom_point() +
facet_wrap(~context_id, ncol = 4)
a %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = Collector, y = Collections.Amount)) +
geom_point() +
facet_wrap(~ contextid, ncol = 4)
a$date_previous <- a$date_id - as.difftime(1, unit="months")
months(1)
a$date_previous <- a$date_id - months(1)
b <- merge(a, a, by.x = c('context_id', 'date_id'), by.y = c('context_id', 'date_previous'))
?merge
b <- merge(a, a, by.x = c('contextid', 'date_id'), by.y = c('contextid', 'date_previous'))
b$CollectorDiff <- b$Collector.x - b$Collector.y
b$CollectionsDiff <- b$Collections.x - b$Collections.y
b$CollectionsDiff <- b$Collections.Amount.x - b$Collections.Amount.y
b <- b[,c("contextid", "date_id", "CollectorDiff", "CollectionsDiff")]
b %>%
filter(year(date_id) == 2016) %>%
ggplot(aes(x = CollectorDiff, y = CollectionsDiff)) +
geom_point() +
geom_smooth(method = 'glm')
boxplot(b$CollectorDiff)
bp <- boxplot(b$CollectorDiff)
bp <- boxplot(b$CollectorDiff)
bp
bp$out
table(bp$out)
b %>%
ggplot(aes(x = CollectorDiff, y = CollectionsDiff)) +
geom_point() +
geom_smooth(method = 'glm')
a$date_previous <- a$date_id - months(6)
b <- merge(a, a, by.x = c('contextid', 'date_id'), by.y = c('contextid', 'date_previous'))
b$CollectorDiff <- b$Collector.x - b$Collector.y
b$CollectionsDiff <- b$Collections.Amount.x - b$Collections.Amount.y
b <- b[,c("contextid", "date_id", "CollectorDiff", "CollectionsDiff")]
b %>%
ggplot(aes(x = CollectorDiff, y = CollectionsDiff)) +
geom_point() +
geom_smooth(method = 'glm')
b %>%
filter(CollectorDiff$CollectorDiff > -500)
ggplot(aes(x = CollectorDiff, y = CollectionsDiff)) +
geom_point() +
geom_smooth(method = 'glm')
b %>%
filter(CollectorDiff$CollectorDiff > -500) %>%
ggplot(aes(x = CollectorDiff, y = CollectionsDiff)) +
geom_point() +
geom_smooth(method = 'glm')
b %>%
filter(CollectorDiff > -500) %>%
ggplot(aes(x = CollectorDiff, y = CollectionsDiff)) +
geom_point() +
geom_smooth(method = 'glm')
fit0 <- lm(Collections.Amount ~ Collector, data = b)
fit0 <- lm(CollectionsDiff ~ CollectorDiff, data = b)
summary(fit0)
b %>%
filter(abs(CollectorDiff) <- 500) %>%
ggplot(aes(x = CollectorDiff, y = CollectionsDiff)) +
geom_point() +
geom_smooth(method = 'glm')
abs(-1)
b %>%
filter(abs(CollectorDiff) <= 500) %>%
ggplot(aes(x = CollectorDiff, y = CollectionsDiff)) +
geom_point() +
geom_smooth(method = 'glm')
fit0 <- lm(CollectionsDiff ~ CollectorDiff, data = b[abs(b$CollectorDiff) <= 500,])
fit0
fit0 <- lm(CollectionsDiff ~ CollectorDiff, data = b[abs(b$CollectorDiff) <= 500,])
summary(fit0)
fit0 <- lm(CollectionsDiff ~ CollectorDiff, data = b)
summary(fit0)
View(b)
b %>%
filter(abs(CollectorDiff) <= 500) %>%
ggplot(aes(x = CollectorDiff, y = CollectionsDiff, color = month(date_id))) +
geom_point() +
geom_smooth(method = 'glm')
fit0 <- lm(CollectionsDiff ~ CollectorDiff + month(date_id), data = b)
summary(fit0)
fit0 <- lm(CollectionsDiff ~ CollectorDiff, data = b)
summary(fit0)
fit0 <- lm(CollectionsDiff ~ CollectorDiff + date_id, data = b)
summary(fit0)
b %>%
filter(abs(CollectorDiff) <= 500) %>%
ggplot(aes(x = CollectorDiff, y = CollectionsDiff, color = date_id)) +
geom_point() +
geom_smooth(method = 'glm')
View(b)
View(train_data)
View(test_data)
collections_wide <-
collections_2016 %>%
spread(PROVIDERxSPECIALTY)
collections_wide <-
collections_2016 %>%
spread(PROVIDERxSPECIALTY, Collector)
View(collections_wide)
View(collections_2016)
### Aggregate by year 2016
collections_2016 <-
collections_supp %>%
mutate(Year = year(date_id)) %>%
filter(Year == 2016) %>%
group_by(Year, contextid, SEGMENT, PROVIDERxSPECIALTY) %>%
summarise(Collector = mean(Collector),
Collections.Amount = mean(Collections.Amount),
Clinical.Encounters = mean(Clinical.Encounters),
Total.Claims.Billed = mean(Total.Claims.Billed)) %>%
filter(Collections.Amount > 0)
View(collections_2016)
View(collections)
View(collections_2016)
### Aggregate by year 2016
collections_2016 <-
collections %>%
mutate(Year = year(date_id)) %>%
filter(Year == 2016) %>%
group_by(Year, contextid, SEGMENT) %>%
summarise(Collector = mean(Collector),
Collections.Amount = mean(Collections.Amount),
Clinical.Encounters = mean(Clinical.Encounters)) %>%
filter(Collections.Amount > 0)
### Aggregate by year 2016
collections_2016 <-
collections %>%
mutate(Year = year(date_id)) %>%
filter(Year == 2016) %>%
group_by(Year, contextid) %>%
summarise(Collector = mean(Collector),
Collections.Amount = mean(Collections.Amount),
Clinical.Encounters = mean(Clinical.Encounters)) %>%
filter(Collections.Amount > 0)
collections_2016 <-
collections %>%
mutate(Year = year(date_id)) %>%
filter(Year == 2016) %>%
group_by(Year, contextid, SEGMENT) %>%
summarise(Collections.Amount = mean(Collections.Amount),
Clinical.Encounters = mean(Clinical.Encounters),
Total.Claims.Billed = mean(Total.Claims.Billed)) %>%
filter(Collections.Amount > 0)
### Aggregate by year 2016
collections_2016 <-
collections %>%
mutate(Year = year(date_id)) %>%
filter(Year == 2016) %>%
group_by(Year, contextid) %>%
summarise(Collections.Amount = mean(Collections.Amount),
Clinical.Encounters = mean(Clinical.Encounters),
Total.Claims.Billed = mean(Total.Claims.Billed)) %>%
filter(Collections.Amount > 0)
View(collections_2016)
View(athena_gp)
View(athena_gp)
View(collections_supp)
View(collections_supp)
### Make athena provider data wide
athena_gp <-
athena %>%
mutate(PROVIDERxSPECIALTY = paste(PROVIDERCLASS, SPECIALTYNAME)) %>%
group_by(MONTH, CONTEXTID, CONTEXTNAME, SEGMENT, PARENTCONTEXTID, GOLIVEDATE, CONTRACTTYPEID, STATE, PROVIDERxSPECIALTY) %>%
summarise(Collector = sum(Rendering.providers.billed.in.last.91.days)) %>%
arrange(CONTEXTID, MONTH)
### Inner Merge between our datasets
collections_supp <- merge(x = collections, y = athena_gp, by.x = c("contextid", "date_id"), by.y = c("CONTEXTID", "MONTH"))
### Aggregate by year 2016
collections_2016 <-
collections_supp %>%
mutate(Year = year(date_id)) %>%
filter(Year == 2016) %>%
group_by(Year, contextid, SEGMENT, PROVIDERxSPECIALTY) %>%
summarise(Collector = mean(Collector),
Collections.Amount = mean(Collections.Amount),
Clinical.Encounters = mean(Clinical.Encounters),
Total.Claims.Billed = mean(Total.Claims.Billed)) %>%
filter(Collections.Amount > 0)
View(collections_2016)
# Set Directory
setwd("C:/Users/bmolin/Documents/GitProject/CMS Order/")
npi_dic <- read.csv(unz("NPPES_Data_Dissemination_April_2017.zip",
"npidata_20050523-20170409.csv"), nrows=10, header=TRUE)
View(npi_dic)
